<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <script src="~/js/jquery.min.js" type="text/javascript"></script>
    <script src="~/js/mqttws31.js" type="text/javascript"></script>
    <script src="~/js/steelseries-min.js" type="text/javascript"></script>
    <script src="~/js/tween-min.js" type="text/javascript"></script>
    <title>Temp</title>
    <script type="text/javascript">
	var tempGauge;
	var client = new Messaging.Client("test.mosquitto.org", 1883,
				"myclientid_" + parseInt(Math.random() * 100, 10));

	client.onConnectionLost = function (responseObject) {
		alert("connection lost: " + responseObject.errorMessage);
	};

	client.onMessageArrived = function (message) {
		tempGauge.setValue(message.payloadString);
	};

	var options = {
		timeout: 3,
		onSuccess: function () {
			// alert("Connected");
			// Connection succeeded; subscribe to our topic
			client.subscribe('consumo', {qos: 0});
		},
		onFailure: function (message) {
			alert("Connection failed: " + message.errorMessage);
		}
	};

	function init() {
	   
	    // original idea.. http://www.desert-home.com/2013/06/how-to-use-steelseries-gauges-with.html
	    // with help.. http://harmoniccode.blogspot.com.au/
	    // and code.. https://github.com/HanSolo/SteelSeries-Canvas

		tempGauge = new steelseries.Radial('gaugeCanvas', {
			gaugeType: steelseries.GaugeType.TYPE4,
			minValue:-15,
			maxValue:50,
			size: 400,
			frameDesign: steelseries.FrameDesign.STEEL,
			knobStyle: steelseries.KnobStyle.STEEL,
			pointerType: steelseries.PointerType.TYPE6,
			lcdDecimals: 0,
			section: null,
			area: null,
			titleString: 'Temperature',
			unitString: 'C',
			threshold: 100,
			lcdVisible: true,
			lcdDecimals: 2
		   });
		tempGauge.setValue('');

		/* Connect to MQTT broker */
		client.connect(options);
	}
        window.onload = init;
    </script>
</head>
<body >
    <div>
        <canvas id=gaugeCanvas width=200 height=200>No canvas in your browser...sorry...</canvas>
        <p>
            Publish to the "temp/random" topic to change the gauge. A local
            process runs every 15 seconds to update the value by adding a random
            value in the range +/-2 degrees.
        </p>
        <p>mosquitto_pub -h test.mosquitto.org -t temp/random -m 23.0</p>
        <p>From <a href="https://github.com/jpmens/tempgauge">https://github.com/jpmens/tempgauge</a>
    </div>
</body>
</html>
